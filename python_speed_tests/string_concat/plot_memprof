#!/usr/bin/env python3

"""A program to plot memprof output.

Usage: plot_memprof <memprof.out>

Where <memprof.out>  is the generated data file to plot, and
      <title>        is the (optional) graph title
"""

import sys

from pylab import *

MiB = 1000000


def plot_data(memsize, title, gfile):
    """Plot a graph of memory usage.

    memsize  a list of memory size by time
    title    graph title string
    gfile    path to file to save the PNG in
    """

    t = range(len(memsize))

    plot(t, memsize, linewidth=1.0)

    xlabel('time')
    ylabel('Memory Used (MB)')
    title(title)
    grid(True)
    savefig('%s.png' % gfile, bbox_inches='tight')
    show()

def main(mp_file):
    """Plot a series of images from a memprof.out file.

    mp_file   path to file full of memprof data

    The data file has lines with this format:

        1529579605.214548|name|606208

    where the first field is a fractional time from time.time(),
          the second field is the 'name' of the data,
          the third file is the RSS memory size in bytes.
    There will be one image file for each 'name' set of data in the file.
    """

    # set title if not given
    if mp_title is None:
        mp_title = 'Memory usage by time'

    with open(mp_file) as f:
        lines = f.readlines()

    last_name = None
    memsize = []
    for line in lines:
        line = line.strip()
        (t, name, rss) = line.split('|')
        if name != last_name:
            if memsize:
                # if we have some data saved, plot it
                plot_data(memsize, name, name)

                last_name = name
                memsize = []
        mem = int(rss)
        memsize.append(mem/MiB)

    if memsize:
        # if we have some leftover data, plot it
        plot_data(memsize, last_name, last_name)


if __name__ == '__main__':
    if len(sys.argv) != 2:
        print(__doc__)
        sys.exit(10)

    file = sys.argv[1]

    main(file)
